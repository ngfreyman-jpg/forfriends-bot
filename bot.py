import os
import json
import html
import logging
import telebot
from typing import Optional
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

logging.basicConfig(level=logging.INFO)

# ---- —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("BOT_TOKEN") or os.getenv("TOKEN")
if not TOKEN:
    raise RuntimeError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN/TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞")

# ---- —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥ (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ env)
WEBAPP_URL = os.getenv("CATALOG_WEBAPP_URL") or os.getenv("CATALOG_URL") or "https://ngfreyman-jpg.github.io/forfriends-catalog/"

# ---- –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ (—Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏)
def _parse_int(val: Optional[str]) -> Optional[int]:
    try:
        s = str(val).strip()
        return int(s) if s and s.lower() != "none" else None
    except Exception:
        return None

SELLER_CHAT_ID: Optional[int] = _parse_int(os.getenv("SELLER_CHAT_ID", "1048516560"))
ORDERS_LOG_CHAT_ID: Optional[int] = _parse_int(os.getenv("ORDERS_LOG_CHAT_ID"))  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ

bot = telebot.TeleBot(TOKEN, parse_mode="HTML")

# ===== UI: —Å—Ç–∞—Ä—Ç –∏ –∫–Ω–æ–ø–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ =====
@bot.message_handler(commands=['start'])
def start(message):
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥ üëï", web_app=WebAppInfo(WEBAPP_URL)))
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üëã –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥:", reply_markup=kb)

# ===== –ü—Ä–∏—ë–º –∑–∞–∫–∞–∑–∞ –∏–∑ WebApp =====
@bot.message_handler(content_types=['web_app_data'])
def handle_web_app_data(message):
    try:
        data = json.loads(message.web_app_data.data)
    except Exception:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–∫–∞–∑ üòï –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        return

    items = data.get("items", [])
    comment = (data.get("comment") or "").strip()
    total = int(float(data.get("total") or 0))
    u = data.get("user") or {}

    safe = lambda s: html.escape(str(s or ""))
    lines, grand = [], 0
    for it in items:
        title = safe(it.get("title"))
        qty = int(it.get("qty") or 1)
        price = int(float(it.get("price") or 0))
        sub = price * qty
        grand += sub
        lines.append(f"‚Ä¢ {title} ‚Äî {qty} √ó {price} ‚ÇΩ = {sub} ‚ÇΩ")

    if total <= 0:
        total = grand

    buyer = f"{safe(u.get('name'))}"
    if u.get("username"):
        buyer += f" @{safe(u.get('username'))}"
    if u.get("id"):
        buyer += f" (id {safe(u.get('id'))})"

    text = (
        "<b>üßæ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑</b>\n"
        f"–ö–ª–∏–µ–Ω—Ç: {buyer or safe(message.from_user.full_name)}\n\n"
        "<b>–¢–æ–≤–∞—Ä—ã:</b>\n" + ("\n".join(lines) if lines else "‚Äî") +
        f"\n\n–ò—Ç–æ–≥–æ: <b>{total} ‚ÇΩ</b>\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {safe(comment) if comment else '‚Äî'}"
    )

    # –ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å: –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–¥–∞–≤—Ü—É; –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ ‚Äî –≤ –ª–æ–≥-—á–∞—Ç
    targets = []
    if SELLER_CHAT_ID:
        targets.append(SELLER_CHAT_ID)
    else:
        targets.append(message.chat.id)  # —Ñ–æ–ª–±—ç–∫ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –∑–∞–∫–∞–∑
    if ORDERS_LOG_CHAT_ID:
        targets.append(ORDERS_LOG_CHAT_ID)

    errors = 0
    for chat_id in targets:
        try:
            bot.send_message(chat_id, text)
        except Exception as e:
            logging.exception("Failed to deliver order to %s: %s", chat_id, e)
            errors += 1

    if errors == 0:
        bot.send_message(message.chat.id, "‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü—É. –°–ø–∞—Å–∏–±–æ!")
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ –≤—Å–µ –∞–¥—Ä–µ—Å–∞—Ç—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π.")

# ===== –ü–æ–ª–ª–∏–Ω–≥ =====
bot.infinity_polling(skip_pending=True)
